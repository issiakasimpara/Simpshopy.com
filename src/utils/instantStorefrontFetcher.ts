// üöÄ R√âCUP√âRATEUR INSTANTAN√â DE STOREFRONT
// Date: 2025-01-28
// Objectif: R√©cup√©rer les donn√©es de boutique instantan√©ment avant React

import { supabase } from '@/integrations/supabase/client';

export interface InstantStorefrontData {
  store: any;
  template: any;
  products: any[];
  market_settings: any;
}

/**
 * R√©cup√®re les donn√©es de boutique instantan√©ment
 * Utilis√© par le script HTML pour pr√©-charger les donn√©es
 */
export async function fetchStorefrontInstantly(storeSlug: string): Promise<InstantStorefrontData | null> {
  try {
    console.log('üöÄ R√©cup√©ration instantan√©e pour:', storeSlug);
    
    const { data, error } = await supabase.rpc('get_storefront_by_slug', {
      store_slug: storeSlug
    });

    if (error) {
      console.error('Erreur r√©cup√©ration instantan√©e:', error);
      return null;
    }

    if (!data) {
      console.warn('Boutique non trouv√©e:', storeSlug);
      return null;
    }

    console.log('‚úÖ Donn√©es instantan√©es r√©cup√©r√©es');
    return data as InstantStorefrontData;
  } catch (error) {
    console.error('Erreur inattendue r√©cup√©ration instantan√©e:', error);
    return null;
  }
}

/**
 * Stocke les donn√©es instantan√©es dans le localStorage
 */
export function storeInstantData(data: InstantStorefrontData): void {
  try {
    localStorage.setItem('instant-storefront-data', JSON.stringify(data));
    console.log('üíæ Donn√©es instantan√©es stock√©es');
  } catch (error) {
    console.error('Erreur stockage donn√©es instantan√©es:', error);
  }
}

/**
 * R√©cup√®re les donn√©es instantan√©es du localStorage
 */
export function getInstantData(): InstantStorefrontData | null {
  try {
    const data = localStorage.getItem('instant-storefront-data');
    if (data) {
      return JSON.parse(data) as InstantStorefrontData;
    }
    return null;
  } catch (error) {
    console.error('Erreur r√©cup√©ration donn√©es instantan√©es:', error);
    return null;
  }
}

/**
 * Nettoie les donn√©es instantan√©es du localStorage
 */
export function clearInstantData(): void {
  try {
    localStorage.removeItem('instant-storefront-data');
    console.log('üßπ Donn√©es instantan√©es nettoy√©es');
  } catch (error) {
    console.error('Erreur nettoyage donn√©es instantan√©es:', error);
  }
}
